@model UpdateRoleRequest

@{
    ViewData["Title"] = "Chỉnh sửa chức vụ";
}

<style>
    /* Container của form */
    .edit-role-form-container {
        max-width: 500px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        margin-top: 50px;
    }

  
    .edit-role-title {
        text-align: center;
        color: #333;
        font-size: 24px;
        margin-bottom: 20px;
    }

    
    .edit-role-form-group {
        margin-bottom: 15px;
    }

   
    .edit-role-label {
        font-weight: bold;
        color: #555;
        display: block;
        margin-bottom: 5px;
    }

   
    .edit-role-input, .edit-role-select {
        width: 100%;
        padding: 10px;
        border-radius: 4px;
        border: 1px solid #ccc;
        font-size: 16px;
        box-sizing: border-box;
    }

    
    .edit-role-btn {
        width: 100%;
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 12px;
        font-size: 16px;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    
    .edit-role-btn:hover {
        background-color: #0056b3;
    }

    .error-message {
        color: red;
        font-size: 12px;
        display: flex; /* Sử dụng flex để xếp icon và text */
        align-items: center; /* Căn giữa icon và text theo chiều dọc */
        margin-left: 10px; /* Khoảng cách giữa Label và thông báo lỗi */
        white-space: nowrap; /* Không cho xuống dòng */
    }

    .sb-nav-link-icon {
        margin-right: 5px; /* Tạo khoảng cách giữa icon và text */
        display: flex; /* Đảm bảo icon không bị xuống dòng */
        align-items: center;
    }

        .sb-nav-link-icon i {
            font-size: 14px; /* Kích thước icon */
            color: red; /* Màu icon */
        }
    /* Thông báo lỗi */
    .edit-role-error-message {
        color: red;
        font-size: 14px;
        margin-top: 5px;
    }

   
    .back-btn {
        display: inline-block;
        margin-top: 15px;
        background-color: #6c757d;
        color: #fff;
        padding: 10px 15px;
        font-size: 16px;
        border-radius: 4px;
        text-decoration: none;
    }

    .back-btn:hover {
        background-color: #5a6268;
    }

   
    .edit-role-label-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 5px; /* Khoảng cách dưới cùng */
    }

   
    .edit-role-label {
        font-weight: bold;
        color: #555;
        margin-right: 10px; /* Khoảng cách giữa Label và lỗi */
        display: inline-block;
    }

   


</style>

<div class="edit-role-form-container">
    <h2 class="edit-role-title">@ViewData["Title"]</h2>

    <form asp-action="Edit" method="post" onsubmit="return validateForm()">
        <!-- Tên chức vụ -->
        <!-- Tên chức vụ -->
        <div class="edit-role-form-group">
            <div class="edit-role-label-container">
                <label for="Name" class="edit-role-label">Tên chức vụ </label>
                <span id="NameError" class="error-message"><div class="sb-nav-link-icon"><i class="fas fa-pinterests" hidden></i></div></span> <!-- Thông báo lỗi nằm cạnh Label -->
            </div>
            <input type="text" class="edit-role-input" id="Name" name="Name" value="@Model.Name" placeholder="Nhập tên chức vụ" />
        </div>
        <!-- Trạng thái -->
        <div class="edit-role-form-group">
            <div class="edit-role-label-container">
                <label for="IsActived" class="edit-role-label">Trạng thái</label>
                <span id="IsActivedError" class="error-message"></span> <!-- Thông báo lỗi nằm cạnh Label -->
            </div>
            <select class="edit-role-select" id="IsActived" name="IsActived">
                <option value="true" selected>Hoạt động</option>
                <option value="false">Dừng hoạt động</option>
            </select>
        </div>

       


        
        <button type="submit" class="edit-role-btn"><i class="fas fa-save"></i> Lưu</button>
    </form>

    <!-- Button quay lại -->
    <a href="@Url.Action("Index")" class="back-btn"><i class="fas fa-arrow-left"></i> Quay lại danh sách</a>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            // Hàm hiển thị lỗi
            function showError(selector, message) {
                $(selector).html(`<div class="sb-nav-link-icon"><i class="fas fa-exclamation-circle"></i></div> ${message}`);
                $(selector).show();
            }

            // Hàm ẩn lỗi
            function hideError(selector) {
                $(selector).html('');
                $(selector).hide();
            }

            // Lắng nghe sự kiện nhập liệu trên trường "Tên Chức Vụ"
            $('#Name').on('input', function () {
                const name = $(this).val();
                const nameTrimmed = name.trim();
                const nameRegex = /^[a-zA-ZÀ-ỹ\s]+$/;

                if (!nameTrimmed) {
                    showError('#NameError', 'Không được bỏ trống.');
                } else if (name !== nameTrimmed) {
                    showError('#NameError', 'Không được có khoảng trắng ở đầu hoặc cuối.');
                } else if (!nameRegex.test(nameTrimmed)) {
                    showError('#NameError', 'Chỉ được chứa chữ cái và khoảng trắng.');
                } else {
                    hideError('#NameError');
                }
            });

            // Lắng nghe sự kiện thay đổi trên trường "Trạng Thái"
            $('#IsActived').on('change', function () {
                const isActived = $(this).val();
                if (!isActived) {
                    showError('#IsActivedError', 'Trạng thái không được bỏ trống.');
                } else {
                    hideError('#IsActivedError');
                }
            });

            // Xử lý khi nhấn nút Lưu
            $('#btnSaveRole').click(function (e) {
                e.preventDefault(); // Ngăn hành động mặc định

                let isValid = true;

                // Kiểm tra trường "Tên Chức Vụ"
                const name = $('#Name').val();
                const nameTrimmed = name.trim();
                const nameRegex = /^[a-zA-ZÀ-ỹ\s]+$/;
                if (!nameTrimmed) {
                    showError('#NameError', 'Không được bỏ trống.');
                    isValid = false;
                } else if (name !== nameTrimmed) {
                    showError('#NameError', 'Không được có khoảng trắng ở đầu hoặc cuối.');
                    isValid = false;
                } else if (!nameRegex.test(nameTrimmed)) {
                    showError('#NameError', 'Chỉ được chứa chữ cái và khoảng trắng.');
                    isValid = false;
                } else {
                    hideError('#NameError');
                }

                // Kiểm tra trường "Trạng Thái"
                const isActived = $('#IsActived').val();
                if (!isActived) {
                    showError('#IsActivedError', 'Trạng thái không được bỏ trống.');
                    isValid = false;
                } else {
                    hideError('#IsActivedError');
                }

                // Nếu hợp lệ thì gửi dữ liệu qua Ajax
                if (isValid) {
                    const roleData = {
                        Name: nameTrimmed,
                        IsActived: isActived === 'true',
                    };

                    $.ajax({
                        url: '@Url.Action("AddNew", "Role")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(roleData),
                        success: function (response) {
                            alert('Thêm chức vụ thành công!');
                            window.location.href = '@Url.Action("Index", "Role")';
                        },
                        error: function (xhr) {
                            const errorDetails = JSON.parse(xhr.responseText || '{}');
                            if (errorDetails.errors) {
                                if (errorDetails.errors.Name) {
                                    showError('#NameError', errorDetails.errors.Name[0]);
                                }
                                if (errorDetails.errors.IsActived) {
                                    showError('#IsActivedError', errorDetails.errors.IsActived[0]);
                                }
                            } else {
                                alert('Có lỗi xảy ra: ' + (xhr.responseText || 'Vui lòng thử lại.'));
                            }
                        }
                    });
                }
            });
        });
    </script>

}




<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
